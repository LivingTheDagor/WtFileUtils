cmake_minimum_required(VERSION 3.28)
set(CMAKE_CXX_STANDARD 23)
project(WtFileUtils LANGUAGES C CXX)
set(BUILD_SHARED_LIBS OFF)
add_definitions(-D_GLIBCXX_USE_CXX11_ABI=1)
message(STATUS "C Compiler: ${CMAKE_C_COMPILER}")
message(STATUS "C++ Compiler: ${CMAKE_CXX_COMPILER}")
message(STATUS "C++ Compiler ID: ${CMAKE_CXX_COMPILER_ID}")
message(STATUS "C++ Compiler ID: ${CMAKE_C_COMPILER_ID}")
message(STATUS "C++ Compiler Version: ${CMAKE_CXX_COMPILER_VERSION}")
message(STATUS "System Name: ${CMAKE_SYSTEM_NAME}")
message(STATUS "System Processor: ${CMAKE_SYSTEM_PROCESSOR}")
message(STATUS "Generator Platform: ${CMAKE_GENERATOR_PLATFORM}")
# set(BUILD_SHARED_LIBS OFF)
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++ -static")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
if (MSVC)
    set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    if(CMAKE_CXX_COMPILER STREQUAL "release")
        if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
            string(REPLACE "/RTC1" "" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /O2 /wd4068")
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wno-multichar -Wno-unused-parameter")
        elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wno-multichar -Wno-unused-parameter")
        endif ()
    elseif (CMAKE_CXX_COMPILER STREQUAL "debug")
        if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -Wno-multichar -Wno-unused-parameter")
        elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -Wno-multichar -Wno-unused-parameter")
        endif ()
    endif ()
elseif (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    if(CMAKE_CXX_COMPILER STREQUAL "release")
        if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wno-multichar -Wno-unused-parameter")
        elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wno-multichar -Wno-unused-parameter")
        endif ()
    elseif (CMAKE_CXX_COMPILER STREQUAL "debug")
        if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -Wno-multichar -Wno-unused-parameter")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic")
        elseif (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -Wno-multichar -Wno-unused-parameter")
            set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address  -fno-omit-frame-pointer -g -O3")
        endif ()
    endif ()
endif ()



# add_subdirectory(mimalloc)
add_subdirectory(BitStream)
add_subdirectory(reader)
add_subdirectory(DataBlock)
add_subdirectory(FileSystem)

add_subdirectory(VROMFs)
add_subdirectory(arc)
# add_subdirectory(Cmain)
add_subdirectory(main)
add_subdirectory(testing)
add_subdirectory(VromfsTest)